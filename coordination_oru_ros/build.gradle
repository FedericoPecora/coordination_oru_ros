/*
 * coordination_oru_ros - Online coordination for multiple robots with ROS
 *
 * Copyright (C) 2017 Federico Pecora, Henrik Andreasson
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses/.
 *
 */

/*
task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}
*/

buildscript {
  apply from: "https://github.com/rosjava/rosjava_bootstrap/raw/kinetic/buildscript.gradle"
}

apply plugin: 'catkin'

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

allprojects {
    group 'se.oru.coordination'
    version = project.catkin.pkg.version
    repositories {
      maven { url 'https://jitpack.io' }
      mavenLocal()
    }
}

subprojects {
    /*
     * The ros-java plugin configures a few things:
     *
     *  - local deployment repository : where it dumps the jars and packaged artifacts)
     *  - local maven repositories    : where it finds your locally installed/built artifacts)
     *  - external maven repositories : where it goes looking if it can't find dependencies locally
     *
     * To modify, or add repos to the default external maven repositories list, pull request against this code:
     *
     *   https://github.com/rosjava/rosjava_bootstrap/blob/kinetic/gradle_plugins/src/main/groovy/org/ros/gradle_plugins/RosPlugin.groovy#L31
     */
    apply plugin: "ros-java"
    /*
     * Some IDE support if you use it.
     */
    apply plugin: "eclipse"
    /* apply plugin: "idea"    */
}

/*
  Some useful tasks:

    install: deploys jar's to MavenLocal() (i.e. ~/.m2/repository)
    publish : deploys jar's to devel/share/maven
    installApp : assembles java apps in the _subproject_/build directories.

  Note that these are dependent on the type of project (e.g. installApp is only valid for
  java binary subprojects, while publish is only added once a subproject is included.
  If you're using catkin_make, this is not important, since it will use the task list specified
  in CMakeLists.txt
*/
defaultTasks 'tasks'
